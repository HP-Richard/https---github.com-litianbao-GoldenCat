#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace JMReports.LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Repository")]
	public partial class JMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertSysUser(SysUser instance);
    partial void UpdateSysUser(SysUser instance);
    partial void DeleteSysUser(SysUser instance);
    partial void InsertHotel(Hotel instance);
    partial void UpdateHotel(Hotel instance);
    partial void DeleteHotel(Hotel instance);
    partial void InsertImportReport(ImportReport instance);
    partial void UpdateImportReport(ImportReport instance);
    partial void DeleteImportReport(ImportReport instance);
    partial void InsertImportCompletedEmailNoticeStatus(ImportCompletedEmailNoticeStatus instance);
    partial void UpdateImportCompletedEmailNoticeStatus(ImportCompletedEmailNoticeStatus instance);
    partial void DeleteImportCompletedEmailNoticeStatus(ImportCompletedEmailNoticeStatus instance);
    partial void InsertDataImportTracking(DataImportTracking instance);
    partial void UpdateDataImportTracking(DataImportTracking instance);
    partial void DeleteDataImportTracking(DataImportTracking instance);
    partial void InsertDataImportBudgetTracking(DataImportBudgetTracking instance);
    partial void UpdateDataImportBudgetTracking(DataImportBudgetTracking instance);
    partial void DeleteDataImportBudgetTracking(DataImportBudgetTracking instance);
    partial void InsertWeeklyReportInfo(WeeklyReportInfo instance);
    partial void UpdateWeeklyReportInfo(WeeklyReportInfo instance);
    partial void DeleteWeeklyReportInfo(WeeklyReportInfo instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    #endregion
		
		public JMDataContext() : 
				base("Data Source=(local);Initial Catalog=Repository;Persist Security Info=True;User ID" +
						"=sa;Password=123456", mappingSource)
		{
			OnCreated();
		}
		
		public JMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public JMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SysUser> SysUser
		{
			get
			{
				return this.GetTable<SysUser>();
			}
		}
		
		public System.Data.Linq.Table<Hotel> Hotel
		{
			get
			{
				return this.GetTable<Hotel>();
			}
		}
		
		public System.Data.Linq.Table<ImportReport> ImportReport
		{
			get
			{
				return this.GetTable<ImportReport>();
			}
		}
		
		public System.Data.Linq.Table<ImportCompletedEmailNoticeStatus> ImportCompletedEmailNoticeStatus
		{
			get
			{
				return this.GetTable<ImportCompletedEmailNoticeStatus>();
			}
		}
		
		public System.Data.Linq.Table<DataImportTracking> DataImportTracking
		{
			get
			{
				return this.GetTable<DataImportTracking>();
			}
		}
		
		public System.Data.Linq.Table<DataImportBudgetTracking> DataImportBudgetTracking
		{
			get
			{
				return this.GetTable<DataImportBudgetTracking>();
			}
		}
		
		public System.Data.Linq.Table<WeeklyReportInfo> WeeklyReportInfo
		{
			get
			{
				return this.GetTable<WeeklyReportInfo>();
			}
		}
		
		public System.Data.Linq.Table<Role> Role
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysUser")]
	public partial class SysUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private int _RoleId;
		
		private string _Title;
		
		private string _Email;
		
		private string _Psd;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntitySet<DataImportTracking> _DataImportTracking;
		
		private EntitySet<DataImportBudgetTracking> _DataImportBudgetTracking;
		
		private EntitySet<WeeklyReportInfo> _WeeklyReportInfo;
		
		private EntitySet<Role> _Role;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPsdChanging(string value);
    partial void OnPsdChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public SysUser()
		{
			this._DataImportTracking = new EntitySet<DataImportTracking>(new Action<DataImportTracking>(this.attach_DataImportTracking), new Action<DataImportTracking>(this.detach_DataImportTracking));
			this._DataImportBudgetTracking = new EntitySet<DataImportBudgetTracking>(new Action<DataImportBudgetTracking>(this.attach_DataImportBudgetTracking), new Action<DataImportBudgetTracking>(this.detach_DataImportBudgetTracking));
			this._WeeklyReportInfo = new EntitySet<WeeklyReportInfo>(new Action<WeeklyReportInfo>(this.attach_WeeklyReportInfo), new Action<WeeklyReportInfo>(this.detach_WeeklyReportInfo));
			this._Role = new EntitySet<Role>(new Action<Role>(this.attach_Role), new Action<Role>(this.detach_Role));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Psd", DbType="NVarChar(50)")]
		public string Psd
		{
			get
			{
				return this._Psd;
			}
			set
			{
				if ((this._Psd != value))
				{
					this.OnPsdChanging(value);
					this.SendPropertyChanging();
					this._Psd = value;
					this.SendPropertyChanged("Psd");
					this.OnPsdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_DataImportTracking", Storage="_DataImportTracking", ThisKey="Id", OtherKey="OperatorUserId")]
		public EntitySet<DataImportTracking> DataImportTracking
		{
			get
			{
				return this._DataImportTracking;
			}
			set
			{
				this._DataImportTracking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_DataImportBudgetTracking", Storage="_DataImportBudgetTracking", ThisKey="Id", OtherKey="OperatorUserId")]
		public EntitySet<DataImportBudgetTracking> DataImportBudgetTracking
		{
			get
			{
				return this._DataImportBudgetTracking;
			}
			set
			{
				this._DataImportBudgetTracking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_WeeklyReportInfo", Storage="_WeeklyReportInfo", ThisKey="Id", OtherKey="CreateUser")]
		public EntitySet<WeeklyReportInfo> WeeklyReportInfo
		{
			get
			{
				return this._WeeklyReportInfo;
			}
			set
			{
				this._WeeklyReportInfo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_Role", Storage="_Role", ThisKey="RoleId", OtherKey="Id")]
		public EntitySet<Role> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				this._Role.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DataImportTracking(DataImportTracking entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_DataImportTracking(DataImportTracking entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
		
		private void attach_DataImportBudgetTracking(DataImportBudgetTracking entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_DataImportBudgetTracking(DataImportBudgetTracking entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
		
		private void attach_WeeklyReportInfo(WeeklyReportInfo entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_WeeklyReportInfo(WeeklyReportInfo entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
		
		private void attach_Role(Role entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = this;
		}
		
		private void detach_Role(Role entity)
		{
			this.SendPropertyChanging();
			entity.SysUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hotel")]
	public partial class Hotel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HotelId;
		
		private string _Code;
		
		private string _Name;
		
		private string _ChineseName;
		
		private string _BranchName;
		
		private string _ManagementGroupName;
		
		private string _Brand;
		
		private System.Nullable<System.DateTime> _OpenDate;
		
		private System.Nullable<int> _RoomCount;
		
		private System.Nullable<int> _RestaurantsCount;
		
		private System.Nullable<int> _BarsCount;
		
		private System.Nullable<decimal> _BanquetHallArea;
		
		private System.Nullable<decimal> _SpaArea;
		
		private string _FinanceSystem;
		
		private EntitySet<ImportCompletedEmailNoticeStatus> _ImportCompletedEmailNoticeStatus;
		
		private EntitySet<DataImportTracking> _DataImportTracking;
		
		private EntitySet<DataImportBudgetTracking> _DataImportBudgetTracking;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChineseNameChanging(string value);
    partial void OnChineseNameChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnManagementGroupNameChanging(string value);
    partial void OnManagementGroupNameChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnOpenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenDateChanged();
    partial void OnRoomCountChanging(System.Nullable<int> value);
    partial void OnRoomCountChanged();
    partial void OnRestaurantsCountChanging(System.Nullable<int> value);
    partial void OnRestaurantsCountChanged();
    partial void OnBarsCountChanging(System.Nullable<int> value);
    partial void OnBarsCountChanged();
    partial void OnBanquetHallAreaChanging(System.Nullable<decimal> value);
    partial void OnBanquetHallAreaChanged();
    partial void OnSpaAreaChanging(System.Nullable<decimal> value);
    partial void OnSpaAreaChanged();
    partial void OnFinanceSystemChanging(string value);
    partial void OnFinanceSystemChanged();
    #endregion
		
		public Hotel()
		{
			this._ImportCompletedEmailNoticeStatus = new EntitySet<ImportCompletedEmailNoticeStatus>(new Action<ImportCompletedEmailNoticeStatus>(this.attach_ImportCompletedEmailNoticeStatus), new Action<ImportCompletedEmailNoticeStatus>(this.detach_ImportCompletedEmailNoticeStatus));
			this._DataImportTracking = new EntitySet<DataImportTracking>(new Action<DataImportTracking>(this.attach_DataImportTracking), new Action<DataImportTracking>(this.detach_DataImportTracking));
			this._DataImportBudgetTracking = new EntitySet<DataImportBudgetTracking>(new Action<DataImportBudgetTracking>(this.attach_DataImportBudgetTracking), new Action<DataImportBudgetTracking>(this.detach_DataImportBudgetTracking));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChineseName", DbType="VarChar(50)")]
		public string ChineseName
		{
			get
			{
				return this._ChineseName;
			}
			set
			{
				if ((this._ChineseName != value))
				{
					this.OnChineseNameChanging(value);
					this.SendPropertyChanging();
					this._ChineseName = value;
					this.SendPropertyChanged("ChineseName");
					this.OnChineseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="VarChar(50)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagementGroupName", DbType="VarChar(50)")]
		public string ManagementGroupName
		{
			get
			{
				return this._ManagementGroupName;
			}
			set
			{
				if ((this._ManagementGroupName != value))
				{
					this.OnManagementGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ManagementGroupName = value;
					this.SendPropertyChanged("ManagementGroupName");
					this.OnManagementGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(500)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDate", DbType="Date")]
		public System.Nullable<System.DateTime> OpenDate
		{
			get
			{
				return this._OpenDate;
			}
			set
			{
				if ((this._OpenDate != value))
				{
					this.OnOpenDateChanging(value);
					this.SendPropertyChanging();
					this._OpenDate = value;
					this.SendPropertyChanged("OpenDate");
					this.OnOpenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomCount", DbType="Int")]
		public System.Nullable<int> RoomCount
		{
			get
			{
				return this._RoomCount;
			}
			set
			{
				if ((this._RoomCount != value))
				{
					this.OnRoomCountChanging(value);
					this.SendPropertyChanging();
					this._RoomCount = value;
					this.SendPropertyChanged("RoomCount");
					this.OnRoomCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestaurantsCount", DbType="Int")]
		public System.Nullable<int> RestaurantsCount
		{
			get
			{
				return this._RestaurantsCount;
			}
			set
			{
				if ((this._RestaurantsCount != value))
				{
					this.OnRestaurantsCountChanging(value);
					this.SendPropertyChanging();
					this._RestaurantsCount = value;
					this.SendPropertyChanged("RestaurantsCount");
					this.OnRestaurantsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarsCount", DbType="Int")]
		public System.Nullable<int> BarsCount
		{
			get
			{
				return this._BarsCount;
			}
			set
			{
				if ((this._BarsCount != value))
				{
					this.OnBarsCountChanging(value);
					this.SendPropertyChanging();
					this._BarsCount = value;
					this.SendPropertyChanged("BarsCount");
					this.OnBarsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanquetHallArea", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> BanquetHallArea
		{
			get
			{
				return this._BanquetHallArea;
			}
			set
			{
				if ((this._BanquetHallArea != value))
				{
					this.OnBanquetHallAreaChanging(value);
					this.SendPropertyChanging();
					this._BanquetHallArea = value;
					this.SendPropertyChanged("BanquetHallArea");
					this.OnBanquetHallAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpaArea", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SpaArea
		{
			get
			{
				return this._SpaArea;
			}
			set
			{
				if ((this._SpaArea != value))
				{
					this.OnSpaAreaChanging(value);
					this.SendPropertyChanging();
					this._SpaArea = value;
					this.SendPropertyChanged("SpaArea");
					this.OnSpaAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceSystem", DbType="VarChar(50)")]
		public string FinanceSystem
		{
			get
			{
				return this._FinanceSystem;
			}
			set
			{
				if ((this._FinanceSystem != value))
				{
					this.OnFinanceSystemChanging(value);
					this.SendPropertyChanging();
					this._FinanceSystem = value;
					this.SendPropertyChanged("FinanceSystem");
					this.OnFinanceSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_ImportCompletedEmailNoticeStatus", Storage="_ImportCompletedEmailNoticeStatus", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<ImportCompletedEmailNoticeStatus> ImportCompletedEmailNoticeStatus
		{
			get
			{
				return this._ImportCompletedEmailNoticeStatus;
			}
			set
			{
				this._ImportCompletedEmailNoticeStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_DataImportTracking", Storage="_DataImportTracking", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<DataImportTracking> DataImportTracking
		{
			get
			{
				return this._DataImportTracking;
			}
			set
			{
				this._DataImportTracking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_DataImportBudgetTracking", Storage="_DataImportBudgetTracking", ThisKey="HotelId", OtherKey="HotelId")]
		public EntitySet<DataImportBudgetTracking> DataImportBudgetTracking
		{
			get
			{
				return this._DataImportBudgetTracking;
			}
			set
			{
				this._DataImportBudgetTracking.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImportCompletedEmailNoticeStatus(ImportCompletedEmailNoticeStatus entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_ImportCompletedEmailNoticeStatus(ImportCompletedEmailNoticeStatus entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_DataImportTracking(DataImportTracking entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_DataImportTracking(DataImportTracking entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
		
		private void attach_DataImportBudgetTracking(DataImportBudgetTracking entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = this;
		}
		
		private void detach_DataImportBudgetTracking(DataImportBudgetTracking entity)
		{
			this.SendPropertyChanging();
			entity.Hotel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportReport")]
	public partial class ImportReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ImportReportName;
		
		private string _Kind;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImportReportNameChanging(string value);
    partial void OnImportReportNameChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    #endregion
		
		public ImportReport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportReportName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ImportReportName
		{
			get
			{
				return this._ImportReportName;
			}
			set
			{
				if ((this._ImportReportName != value))
				{
					this.OnImportReportNameChanging(value);
					this.SendPropertyChanging();
					this._ImportReportName = value;
					this.SendPropertyChanged("ImportReportName");
					this.OnImportReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportCompletedEmailNoticeStatus")]
	public partial class ImportCompletedEmailNoticeStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Kind;
		
		private System.Nullable<int> _HotelId;
		
		private System.Nullable<int> _YearCode;
		
		private System.Nullable<int> _MonthCode;
		
		private System.Nullable<System.DateTime> _MonthDate;
		
		private System.Nullable<int> _EmailSendStatus;
		
		private string _ErrorMessage;
		
		private System.Nullable<System.DateTime> _EmailSendTime;
		
		private EntityRef<Hotel> _Hotel;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnHotelIdChanging(System.Nullable<int> value);
    partial void OnHotelIdChanged();
    partial void OnYearCodeChanging(System.Nullable<int> value);
    partial void OnYearCodeChanged();
    partial void OnMonthCodeChanging(System.Nullable<int> value);
    partial void OnMonthCodeChanged();
    partial void OnMonthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMonthDateChanged();
    partial void OnEmailSendStatusChanging(System.Nullable<int> value);
    partial void OnEmailSendStatusChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnEmailSendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEmailSendTimeChanged();
    #endregion
		
		public ImportCompletedEmailNoticeStatus()
		{
			this._Hotel = default(EntityRef<Hotel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(50)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int")]
		public System.Nullable<int> HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearCode", DbType="Int")]
		public System.Nullable<int> YearCode
		{
			get
			{
				return this._YearCode;
			}
			set
			{
				if ((this._YearCode != value))
				{
					this.OnYearCodeChanging(value);
					this.SendPropertyChanging();
					this._YearCode = value;
					this.SendPropertyChanged("YearCode");
					this.OnYearCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthCode", DbType="Int")]
		public System.Nullable<int> MonthCode
		{
			get
			{
				return this._MonthCode;
			}
			set
			{
				if ((this._MonthCode != value))
				{
					this.OnMonthCodeChanging(value);
					this.SendPropertyChanging();
					this._MonthCode = value;
					this.SendPropertyChanged("MonthCode");
					this.OnMonthCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSendStatus", DbType="Int")]
		public System.Nullable<int> EmailSendStatus
		{
			get
			{
				return this._EmailSendStatus;
			}
			set
			{
				if ((this._EmailSendStatus != value))
				{
					this.OnEmailSendStatusChanging(value);
					this.SendPropertyChanging();
					this._EmailSendStatus = value;
					this.SendPropertyChanged("EmailSendStatus");
					this.OnEmailSendStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailSendTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EmailSendTime
		{
			get
			{
				return this._EmailSendTime;
			}
			set
			{
				if ((this._EmailSendTime != value))
				{
					this.OnEmailSendTimeChanging(value);
					this.SendPropertyChanging();
					this._EmailSendTime = value;
					this.SendPropertyChanged("EmailSendTime");
					this.OnEmailSendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_ImportCompletedEmailNoticeStatus", Storage="_Hotel", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true)]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.ImportCompletedEmailNoticeStatus.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.ImportCompletedEmailNoticeStatus.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataImportTracking")]
	public partial class DataImportTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _YearCode;
		
		private System.Nullable<int> _MonthCode;
		
		private System.Nullable<System.DateTime> _MonthDate;
		
		private int _HotelId;
		
		private string _InputTableName;
		
		private System.Nullable<bool> _IsSuccess;
		
		private System.Nullable<long> _SuccessRecordNum;
		
		private string _FileName;
		
		private int _OperatorUserId;
		
		private System.DateTime _OperatorTime;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<SysUser> _SysUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYearCodeChanging(System.Nullable<int> value);
    partial void OnYearCodeChanged();
    partial void OnMonthCodeChanging(System.Nullable<int> value);
    partial void OnMonthCodeChanged();
    partial void OnMonthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMonthDateChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnInputTableNameChanging(string value);
    partial void OnInputTableNameChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnSuccessRecordNumChanging(System.Nullable<long> value);
    partial void OnSuccessRecordNumChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOperatorUserIdChanging(int value);
    partial void OnOperatorUserIdChanged();
    partial void OnOperatorTimeChanging(System.DateTime value);
    partial void OnOperatorTimeChanged();
    #endregion
		
		public DataImportTracking()
		{
			this._Hotel = default(EntityRef<Hotel>);
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearCode", DbType="Int")]
		public System.Nullable<int> YearCode
		{
			get
			{
				return this._YearCode;
			}
			set
			{
				if ((this._YearCode != value))
				{
					this.OnYearCodeChanging(value);
					this.SendPropertyChanging();
					this._YearCode = value;
					this.SendPropertyChanged("YearCode");
					this.OnYearCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthCode", DbType="Int")]
		public System.Nullable<int> MonthCode
		{
			get
			{
				return this._MonthCode;
			}
			set
			{
				if ((this._MonthCode != value))
				{
					this.OnMonthCodeChanging(value);
					this.SendPropertyChanging();
					this._MonthCode = value;
					this.SendPropertyChanged("MonthCode");
					this.OnMonthCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date")]
		public System.Nullable<System.DateTime> MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputTableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InputTableName
		{
			get
			{
				return this._InputTableName;
			}
			set
			{
				if ((this._InputTableName != value))
				{
					this.OnInputTableNameChanging(value);
					this.SendPropertyChanging();
					this._InputTableName = value;
					this.SendPropertyChanged("InputTableName");
					this.OnInputTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessRecordNum", DbType="BigInt")]
		public System.Nullable<long> SuccessRecordNum
		{
			get
			{
				return this._SuccessRecordNum;
			}
			set
			{
				if ((this._SuccessRecordNum != value))
				{
					this.OnSuccessRecordNumChanging(value);
					this.SendPropertyChanging();
					this._SuccessRecordNum = value;
					this.SendPropertyChanged("SuccessRecordNum");
					this.OnSuccessRecordNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorUserId", DbType="Int NOT NULL")]
		public int OperatorUserId
		{
			get
			{
				return this._OperatorUserId;
			}
			set
			{
				if ((this._OperatorUserId != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorUserId = value;
					this.SendPropertyChanged("OperatorUserId");
					this.OnOperatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorTime", DbType="DateTime NOT NULL")]
		public System.DateTime OperatorTime
		{
			get
			{
				return this._OperatorTime;
			}
			set
			{
				if ((this._OperatorTime != value))
				{
					this.OnOperatorTimeChanging(value);
					this.SendPropertyChanging();
					this._OperatorTime = value;
					this.SendPropertyChanged("OperatorTime");
					this.OnOperatorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_DataImportTracking", Storage="_Hotel", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.DataImportTracking.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.DataImportTracking.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_DataImportTracking", Storage="_SysUser", ThisKey="OperatorUserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.DataImportTracking.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.DataImportTracking.Add(this);
						this._OperatorUserId = value.Id;
					}
					else
					{
						this._OperatorUserId = default(int);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataImportBudgetTracking")]
	public partial class DataImportBudgetTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _YearCode;
		
		private System.Nullable<System.DateTime> _MonthDate;
		
		private int _HotelId;
		
		private string _InputTableName;
		
		private System.Nullable<bool> _IsSuccess;
		
		private System.Nullable<long> _SuccessRecordNum;
		
		private string _FileName;
		
		private int _OperatorUserId;
		
		private System.DateTime _OperatorTime;
		
		private EntityRef<Hotel> _Hotel;
		
		private EntityRef<SysUser> _SysUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYearCodeChanging(System.Nullable<int> value);
    partial void OnYearCodeChanged();
    partial void OnMonthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMonthDateChanged();
    partial void OnHotelIdChanging(int value);
    partial void OnHotelIdChanged();
    partial void OnInputTableNameChanging(string value);
    partial void OnInputTableNameChanged();
    partial void OnIsSuccessChanging(System.Nullable<bool> value);
    partial void OnIsSuccessChanged();
    partial void OnSuccessRecordNumChanging(System.Nullable<long> value);
    partial void OnSuccessRecordNumChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOperatorUserIdChanging(int value);
    partial void OnOperatorUserIdChanged();
    partial void OnOperatorTimeChanging(System.DateTime value);
    partial void OnOperatorTimeChanged();
    #endregion
		
		public DataImportBudgetTracking()
		{
			this._Hotel = default(EntityRef<Hotel>);
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearCode", DbType="Int")]
		public System.Nullable<int> YearCode
		{
			get
			{
				return this._YearCode;
			}
			set
			{
				if ((this._YearCode != value))
				{
					this.OnYearCodeChanging(value);
					this.SendPropertyChanging();
					this._YearCode = value;
					this.SendPropertyChanged("YearCode");
					this.OnYearCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthDate", DbType="Date")]
		public System.Nullable<System.DateTime> MonthDate
		{
			get
			{
				return this._MonthDate;
			}
			set
			{
				if ((this._MonthDate != value))
				{
					this.OnMonthDateChanging(value);
					this.SendPropertyChanging();
					this._MonthDate = value;
					this.SendPropertyChanged("MonthDate");
					this.OnMonthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotelId", DbType="Int NOT NULL")]
		public int HotelId
		{
			get
			{
				return this._HotelId;
			}
			set
			{
				if ((this._HotelId != value))
				{
					if (this._Hotel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHotelIdChanging(value);
					this.SendPropertyChanging();
					this._HotelId = value;
					this.SendPropertyChanged("HotelId");
					this.OnHotelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputTableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InputTableName
		{
			get
			{
				return this._InputTableName;
			}
			set
			{
				if ((this._InputTableName != value))
				{
					this.OnInputTableNameChanging(value);
					this.SendPropertyChanging();
					this._InputTableName = value;
					this.SendPropertyChanged("InputTableName");
					this.OnInputTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccess", DbType="Bit")]
		public System.Nullable<bool> IsSuccess
		{
			get
			{
				return this._IsSuccess;
			}
			set
			{
				if ((this._IsSuccess != value))
				{
					this.OnIsSuccessChanging(value);
					this.SendPropertyChanging();
					this._IsSuccess = value;
					this.SendPropertyChanged("IsSuccess");
					this.OnIsSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessRecordNum", DbType="BigInt")]
		public System.Nullable<long> SuccessRecordNum
		{
			get
			{
				return this._SuccessRecordNum;
			}
			set
			{
				if ((this._SuccessRecordNum != value))
				{
					this.OnSuccessRecordNumChanging(value);
					this.SendPropertyChanging();
					this._SuccessRecordNum = value;
					this.SendPropertyChanged("SuccessRecordNum");
					this.OnSuccessRecordNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorUserId", DbType="Int NOT NULL")]
		public int OperatorUserId
		{
			get
			{
				return this._OperatorUserId;
			}
			set
			{
				if ((this._OperatorUserId != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOperatorUserIdChanging(value);
					this.SendPropertyChanging();
					this._OperatorUserId = value;
					this.SendPropertyChanged("OperatorUserId");
					this.OnOperatorUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorTime", DbType="DateTime NOT NULL")]
		public System.DateTime OperatorTime
		{
			get
			{
				return this._OperatorTime;
			}
			set
			{
				if ((this._OperatorTime != value))
				{
					this.OnOperatorTimeChanging(value);
					this.SendPropertyChanging();
					this._OperatorTime = value;
					this.SendPropertyChanged("OperatorTime");
					this.OnOperatorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hotel_DataImportBudgetTracking", Storage="_Hotel", ThisKey="HotelId", OtherKey="HotelId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Hotel Hotel
		{
			get
			{
				return this._Hotel.Entity;
			}
			set
			{
				Hotel previousValue = this._Hotel.Entity;
				if (((previousValue != value) 
							|| (this._Hotel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hotel.Entity = null;
						previousValue.DataImportBudgetTracking.Remove(this);
					}
					this._Hotel.Entity = value;
					if ((value != null))
					{
						value.DataImportBudgetTracking.Add(this);
						this._HotelId = value.HotelId;
					}
					else
					{
						this._HotelId = default(int);
					}
					this.SendPropertyChanged("Hotel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_DataImportBudgetTracking", Storage="_SysUser", ThisKey="OperatorUserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.DataImportBudgetTracking.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.DataImportBudgetTracking.Add(this);
						this._OperatorUserId = value.Id;
					}
					else
					{
						this._OperatorUserId = default(int);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WeeklyReportInfo")]
	public partial class WeeklyReportInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Context1;
		
		private string _Context2;
		
		private string _Context3;
		
		private string _Context4;
		
		private string _Context5;
		
		private string _Status;
		
		private string _ApproveUsers;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private System.Nullable<int> _CreateUser;
		
		private EntityRef<SysUser> _SysUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnContext1Changing(string value);
    partial void OnContext1Changed();
    partial void OnContext2Changing(string value);
    partial void OnContext2Changed();
    partial void OnContext3Changing(string value);
    partial void OnContext3Changed();
    partial void OnContext4Changing(string value);
    partial void OnContext4Changed();
    partial void OnContext5Changing(string value);
    partial void OnContext5Changed();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnApproveUsersChanging(string value);
    partial void OnApproveUsersChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnCreateUserChanging(System.Nullable<int> value);
    partial void OnCreateUserChanged();
    #endregion
		
		public WeeklyReportInfo()
		{
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context1", DbType="NVarChar(MAX)")]
		public string Context1
		{
			get
			{
				return this._Context1;
			}
			set
			{
				if ((this._Context1 != value))
				{
					this.OnContext1Changing(value);
					this.SendPropertyChanging();
					this._Context1 = value;
					this.SendPropertyChanged("Context1");
					this.OnContext1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context2", DbType="NVarChar(MAX)")]
		public string Context2
		{
			get
			{
				return this._Context2;
			}
			set
			{
				if ((this._Context2 != value))
				{
					this.OnContext2Changing(value);
					this.SendPropertyChanging();
					this._Context2 = value;
					this.SendPropertyChanged("Context2");
					this.OnContext2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context3", DbType="NVarChar(MAX)")]
		public string Context3
		{
			get
			{
				return this._Context3;
			}
			set
			{
				if ((this._Context3 != value))
				{
					this.OnContext3Changing(value);
					this.SendPropertyChanging();
					this._Context3 = value;
					this.SendPropertyChanged("Context3");
					this.OnContext3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context4", DbType="NVarChar(MAX)")]
		public string Context4
		{
			get
			{
				return this._Context4;
			}
			set
			{
				if ((this._Context4 != value))
				{
					this.OnContext4Changing(value);
					this.SendPropertyChanging();
					this._Context4 = value;
					this.SendPropertyChanged("Context4");
					this.OnContext4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context5", DbType="NVarChar(MAX)")]
		public string Context5
		{
			get
			{
				return this._Context5;
			}
			set
			{
				if ((this._Context5 != value))
				{
					this.OnContext5Changing(value);
					this.SendPropertyChanging();
					this._Context5 = value;
					this.SendPropertyChanged("Context5");
					this.OnContext5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveUsers", DbType="VarChar(MAX)")]
		public string ApproveUsers
		{
			get
			{
				return this._ApproveUsers;
			}
			set
			{
				if ((this._ApproveUsers != value))
				{
					this.OnApproveUsersChanging(value);
					this.SendPropertyChanging();
					this._ApproveUsers = value;
					this.SendPropertyChanged("ApproveUsers");
					this.OnApproveUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUser", DbType="Int")]
		public System.Nullable<int> CreateUser
		{
			get
			{
				return this._CreateUser;
			}
			set
			{
				if ((this._CreateUser != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreateUserChanging(value);
					this.SendPropertyChanging();
					this._CreateUser = value;
					this.SendPropertyChanged("CreateUser");
					this.OnCreateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_WeeklyReportInfo", Storage="_SysUser", ThisKey="CreateUser", OtherKey="Id", IsForeignKey=true)]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.WeeklyReportInfo.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.WeeklyReportInfo.Add(this);
						this._CreateUser = value.Id;
					}
					else
					{
						this._CreateUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RoleName;
		
		private string _Description;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntityRef<SysUser> _SysUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public Role()
		{
			this._SysUser = default(EntityRef<SysUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._SysUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysUser_Role", Storage="_SysUser", ThisKey="Id", OtherKey="RoleId", IsForeignKey=true)]
		public SysUser SysUser
		{
			get
			{
				return this._SysUser.Entity;
			}
			set
			{
				SysUser previousValue = this._SysUser.Entity;
				if (((previousValue != value) 
							|| (this._SysUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysUser.Entity = null;
						previousValue.Role.Remove(this);
					}
					this._SysUser.Entity = value;
					if ((value != null))
					{
						value.Role.Add(this);
						this._Id = value.RoleId;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("SysUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
